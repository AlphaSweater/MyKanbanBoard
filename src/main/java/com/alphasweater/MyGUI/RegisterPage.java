package com.alphasweater.MyGUI;
/* Author: Chad Fairlie
*  Pseudonym: AlphaSweater
*  Student Number: ST********
---------------------------------------------------------------------------------------------------------------------*/

import com.alphasweater.MyUser.MyUserDAOClass;
import com.alphasweater.MyUser.MyUserSignUpClass;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class RegisterPage {
    private JLabel lblTitle;
    private JPanel north;
    private JLabel lblSubTitle;
    private JTextField edtUsername;
    private JPasswordField edtPassword;
    private JLabel lblFirstname;
    private JLabel lblPassword;
    private JButton btnRegister;
    private JButton btnGoToLogin;
    public JPanel panel;
    private JTextArea lblStatus;
    private JLabel lblLastname;
    private JLabel lblUsername;
    private JTextField edtLastname;
    private JTextField edtFirstname;
    private static final JFrame register = new JFrame("Register");

    /**
     * Summons the registration page GUI.
     */
    public static void createRegisterPage() {
        register.setContentPane(new RegisterPage().panel);
        register.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        register.pack();
        register.setLocationRelativeTo(null);
        register.setVisible(true);
    }

    public RegisterPage() {
        btnRegister.addActionListener(e -> {
            // Get the input values from the fields
            String inFirstname = edtFirstname.getText();
            String inLastname = edtLastname.getText();
            String inUsername = edtUsername.getText();
            String inPassword = String.valueOf(edtPassword.getPassword());

            // Call the registerUser method and display the returned message in a dialog
            JOptionPane.showMessageDialog(null, MyUserSignUpClass.registerUser(false, inUsername, inPassword, inFirstname, inLastname, MyUserDAOClass.getUserDatabase()));

            // Clear the input fields
            edtUsername.setText("");
            edtPassword.setText("");

            // If registration is successful, close the register page and display the login page
            if (MyUserSignUpClass.getIsRegistered()) {
                register.dispose();
                LoginPage.createLoginPage();
            }
        });

        btnGoToLogin.addActionListener(e -> {
            // Close the register page and display the login page
            register.dispose();
            LoginPage.createLoginPage();
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(14, 3, new Insets(0, 0, 0, 0), 10, -1));
        panel.setBackground(new Color(-13223617));
        panel.setPreferredSize(new Dimension(500, 500));
        panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        north = new JPanel();
        north.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), 10, -1));
        north.setBackground(new Color(-13223617));
        panel.add(north, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 120), new Dimension(-1, 165), 0, false));
        north.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        lblTitle = new JLabel();
        Font lblTitleFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 24, lblTitle.getFont());
        if (lblTitleFont != null) lblTitle.setFont(lblTitleFont);
        lblTitle.setForeground(new Color(-1250067));
        lblTitle.setText("Welcome new user!");
        north.add(lblTitle, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblSubTitle = new JLabel();
        lblSubTitle.setForeground(new Color(-9275779));
        lblSubTitle.setText("We're so excited to have you join us!");
        north.add(lblSubTitle, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        edtFirstname = new JTextField();
        edtFirstname.setBackground(new Color(-13618375));
        edtFirstname.setCaretColor(new Color(-1250067));
        Font edtFirstnameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 16, edtFirstname.getFont());
        if (edtFirstnameFont != null) edtFirstname.setFont(edtFirstnameFont);
        edtFirstname.setForeground(new Color(-1250067));
        edtFirstname.setMargin(new Insets(2, 6, 2, 6));
        panel.add(edtFirstname, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        edtPassword = new JPasswordField();
        edtPassword.setBackground(new Color(-13618375));
        edtPassword.setCaretColor(new Color(-1250067));
        Font edtPasswordFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 16, edtPassword.getFont());
        if (edtPasswordFont != null) edtPassword.setFont(edtPasswordFont);
        edtPassword.setForeground(new Color(-1250067));
        edtPassword.setMargin(new Insets(2, 6, 2, 6));
        panel.add(edtPassword, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        lblFirstname = new JLabel();
        Font lblFirstnameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, -1, lblFirstname.getFont());
        if (lblFirstnameFont != null) lblFirstname.setFont(lblFirstnameFont);
        lblFirstname.setForeground(new Color(-7433577));
        lblFirstname.setText("First Name");
        panel.add(lblFirstname, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblPassword = new JLabel();
        Font lblPasswordFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, -1, lblPassword.getFont());
        if (lblPasswordFont != null) lblPassword.setFont(lblPasswordFont);
        lblPassword.setForeground(new Color(-7433577));
        lblPassword.setText("Password");
        panel.add(lblPassword, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel.add(spacer1, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(50, -1), null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel.add(spacer2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(50, -1), null, 0, false));
        final Spacer spacer3 = new Spacer();
        panel.add(spacer3, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(50, -1), null, 0, false));
        final Spacer spacer4 = new Spacer();
        panel.add(spacer4, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(50, -1), null, 0, false));
        btnRegister = new JButton();
        btnRegister.setBackground(new Color(-9270822));
        btnRegister.setFocusPainted(true);
        btnRegister.setFocusable(false);
        Font btnRegisterFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 24, btnRegister.getFont());
        if (btnRegisterFont != null) btnRegister.setFont(btnRegisterFont);
        btnRegister.setForeground(new Color(-1250067));
        btnRegister.setHideActionText(false);
        btnRegister.setText("Register");
        panel.add(btnRegister, new GridConstraints(11, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 50), null, 0, false));
        final Spacer spacer5 = new Spacer();
        panel.add(spacer5, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        panel.add(spacer6, new GridConstraints(13, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        btnGoToLogin = new JButton();
        btnGoToLogin.setBorderPainted(false);
        btnGoToLogin.setContentAreaFilled(false);
        btnGoToLogin.setFocusable(false);
        Font btnGoToLoginFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, -1, btnGoToLogin.getFont());
        if (btnGoToLoginFont != null) btnGoToLogin.setFont(btnGoToLoginFont);
        btnGoToLogin.setForeground(new Color(-9270822));
        btnGoToLogin.setLabel("Already have an account? Login");
        btnGoToLogin.setOpaque(false);
        btnGoToLogin.setSelected(false);
        btnGoToLogin.setText("Already have an account? Login");
        panel.add(btnGoToLogin, new GridConstraints(12, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblStatus = new JTextArea();
        lblStatus.setBackground(new Color(-13223617));
        lblStatus.setForeground(new Color(-1765847));
        lblStatus.setLineWrap(true);
        lblStatus.setText("");
        lblStatus.setVisible(false);
        lblStatus.setWrapStyleWord(true);
        panel.add(lblStatus, new GridConstraints(10, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        lblLastname = new JLabel();
        Font lblLastnameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, -1, lblLastname.getFont());
        if (lblLastnameFont != null) lblLastname.setFont(lblLastnameFont);
        lblLastname.setForeground(new Color(-7433577));
        lblLastname.setText("Last Name");
        panel.add(lblLastname, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        edtLastname = new JTextField();
        edtLastname.setBackground(new Color(-13618375));
        edtLastname.setCaretColor(new Color(-1250067));
        Font edtLastnameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 16, edtLastname.getFont());
        if (edtLastnameFont != null) edtLastname.setFont(edtLastnameFont);
        edtLastname.setForeground(new Color(-1250067));
        edtLastname.setMargin(new Insets(2, 6, 2, 6));
        panel.add(edtLastname, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        lblUsername = new JLabel();
        Font lblUsernameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, -1, lblUsername.getFont());
        if (lblUsernameFont != null) lblUsername.setFont(lblUsernameFont);
        lblUsername.setForeground(new Color(-7433577));
        lblUsername.setText("Username");
        panel.add(lblUsername, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        edtUsername = new JTextField();
        edtUsername.setBackground(new Color(-13618375));
        edtUsername.setCaretColor(new Color(-1250067));
        Font edtUsernameFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 16, edtUsername.getFont());
        if (edtUsernameFont != null) edtUsername.setFont(edtUsernameFont);
        edtUsername.setForeground(new Color(-1250067));
        edtUsername.setMargin(new Insets(2, 6, 2, 6));
        panel.add(edtUsername, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 40), null, 0, false));
        edtFirstname.setNextFocusableComponent(edtPassword);
        edtPassword.setNextFocusableComponent(btnRegister);
        edtLastname.setNextFocusableComponent(edtPassword);
        edtUsername.setNextFocusableComponent(edtPassword);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
//--------------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------EOF---------------------------------------------------------//