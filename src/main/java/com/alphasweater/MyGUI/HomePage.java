package com.alphasweater.MyGUI;
/* Author: Chad Fairlie
*  Pseudonym: AlphaSweater
*  Student Number: ST********
---------------------------------------------------------------------------------------------------------------------*/

import com.alphasweater.MyTasks.MyTasksClass;
import com.alphasweater.MyUser.MyUserClass;
import com.alphasweater.MyUtil.WordWrapRenderer;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.table.TableColumnModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.util.Locale;

public class HomePage {
    private JPanel panel;
    private JButton btnLogOut;
    private JLabel lblWelcome;
    private JLabel lblTitle;
    private JPanel JPanelCentre;
    private JButton button1;
    private JTable tblTasksList;
    private JScrollPane tblScrollPane;

    private static final JFrame homeFrame = new JFrame("Home Page");

    /**
     * Summons the home page GUI.
     */
    public static void createHomePage() {
        // Set the content pane of the home JFrame to the panel of the HomePage instance
        homeFrame.setContentPane(new HomePage().panel);
        homeFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        homeFrame.pack();
        homeFrame.setLocationRelativeTo(null);
        homeFrame.setVisible(true);
    }

    public HomePage() {
        $$$setupUI$$$();
        lblTitle.setText("Welcome to EasyKanban.");
        // Set the welcome label text to display the user's first and last name
        lblWelcome.setText("Hi " + MyUserClass.currentUser.getUserFirstName() + " " + MyUserClass.currentUser.getUserLastName() + ", it is great to see you.");
        MyTasksClass.setNumOfTasks(10);

        // Add an ActionListener to the log-out button
        btnLogOut.addActionListener(actionEvent -> {
            // Dispose the home JFrame
            homeFrame.dispose();
            // Create and display the login page
            LoginPage.createLoginPage();
        });
    }

    private void createUIComponents() {
        String[] columnNames = {"Task Status", "Developer Details", "Task Number", "Task Name", "Task Description", "Task ID", "Duration"};
        Object[][] data = {
                // Replace this sample data with your actual data
                {"To Do", "Chad Fairlie", 5, "Test Task", "This is a test task and it is going on very long here", "CH:12:ddc", 6},
                {"In Progress", "John Doe", 8, "Task 2", "This is task 2", "JD:34:abc", 4},
                // Add more rows if needed
        };
        tblTasksList = new JTable(data, columnNames) {
            @Override
            public boolean getScrollableTracksViewportWidth() {
                return getPreferredSize().width < getParent().getWidth();
            }
        };
        tblTasksList.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // Set auto resize mode to OFF

        tblTasksList = new JTable(data, columnNames);
        tblScrollPane = new JScrollPane(tblTasksList);
        tblScrollPane.setViewportView(tblTasksList);

        TableColumnModel columnModel = tblTasksList.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(107); // Set width for the first column
        columnModel.getColumn(1).setPreferredWidth(200); // Set width for the second column
        columnModel.getColumn(2).setPreferredWidth(80); // Set width for the third column
        columnModel.getColumn(3).setPreferredWidth(300); // Set width for the fourth column
        columnModel.getColumn(4).setCellRenderer(new WordWrapRenderer()); // Set width for the fifth column
        columnModel.getColumn(4).setPreferredWidth(400); // Set width for the fourth column
        columnModel.getColumn(5).setPreferredWidth(120); // Set width for the sixth column
        columnModel.getColumn(6).setPreferredWidth(100); // Set width for the seventh column
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
        panel.setBackground(new Color(-13223617));
        panel.setPreferredSize(new Dimension(900, 600));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-13223617));
        panel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnLogOut = new JButton();
        btnLogOut.setActionCommand("");
        Font btnLogOutFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 20, btnLogOut.getFont());
        if (btnLogOutFont != null) btnLogOut.setFont(btnLogOutFont);
        btnLogOut.setText("Logout");
        panel1.add(btnLogOut, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblWelcome = new JLabel();
        Font lblWelcomeFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 14, lblWelcome.getFont());
        if (lblWelcomeFont != null) lblWelcome.setFont(lblWelcomeFont);
        lblWelcome.setForeground(new Color(-1250067));
        lblWelcome.setText("This is a temp welcome message");
        panel1.add(lblWelcome, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblTitle = new JLabel();
        Font lblTitleFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.PLAIN, 24, lblTitle.getFont());
        if (lblTitleFont != null) lblTitle.setFont(lblTitleFont);
        lblTitle.setForeground(new Color(-1250067));
        lblTitle.setText("Title");
        panel1.add(lblTitle, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        JPanelCentre = new JPanel();
        JPanelCentre.setLayout(new GridLayoutManager(2, 5, new Insets(0, 0, 0, 0), -1, -1));
        JPanelCentre.setBackground(new Color(-13223617));
        panel1.add(JPanelCentre, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        button1 = new JButton();
        button1.setText("Button");
        JPanelCentre.add(button1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(300, -1), null, 0, false));
        final JButton button2 = new JButton();
        button2.setText("Button");
        JPanelCentre.add(button2, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(300, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        JPanelCentre.add(spacer1, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, null, new Dimension(30, -1), null, 0, false));
        final Spacer spacer2 = new Spacer();
        JPanelCentre.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, null, new Dimension(30, -1), null, 0, false));
        tblScrollPane.setHorizontalScrollBarPolicy(32);
        tblScrollPane.setVerticalScrollBarPolicy(22);
        JPanelCentre.add(tblScrollPane, new GridConstraints(1, 1, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tblTasksList.setFillsViewportHeight(true);
        tblTasksList.setRowHeight(60);
        tblScrollPane.setViewportView(tblTasksList);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
//--------------------------------------------------------------------------------------------------------------------//
//--------------------------------------------------------EOF---------------------------------------------------------//